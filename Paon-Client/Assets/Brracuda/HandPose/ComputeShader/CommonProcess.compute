#pragma kernel LetterBoxImage


float2 _spadScale;
uint _letterboxWidth;
sampler2D _letterboxInput;
RWTexture2D<float4> _letterboxTexture;

// Generate letter-box image texture.
[numthreads(8, 8, 1)]
void LetterBoxImage(uint2 id : SV_DispatchThreadID)
{
    if (any(id > _letterboxWidth)) return;

    // UV coordinates
    float2 uv = (id + 0.5) / _letterboxWidth;

    // Scaling
    uv = (uv - 0.5) * _spadScale + 0.5;

    // UV gradients
    float2 duv_dx = float2(+1.0 / _letterboxWidth * _spadScale.x, 0);
    float2 duv_dy = float2(0, -1.0 / _letterboxWidth * _spadScale.y);

    // Texture sample
    float3 rgb = tex2Dgrad(_letterboxInput, uv, duv_dx, duv_dy).rgb;

    // Bounding
    rgb *= all(uv > 0) && all (uv < 1);

    _letterboxTexture[id] = float4(rgb, 1);
}
